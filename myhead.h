#ifndef MYHEAD_H
#define MYHEAD_H
#include <Windows.h>
#include <iostream>
#include <stdio.h>
#include <conio.h>
#include <string>
#include <vector>
#include <map>
#include <fstream>
#include "Person.h"
#include "jobs.h"

using namespace std;

/*************************************************
函数名称:gotoxy
函数功能、性能等的描述:
    设置控制台光标
输入参数说明：
    xpos：   x坐标
    ypos：   y坐标
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void gotoxy(int xpos, int ypos);
/*************************************************
函数名称:getKey
函数功能、性能等的描述:
    获取用户使用键盘得到的选项
输入参数说明：
    select1：选项列表
    len：    选项列表长度
输出参数的说明:
    index：  选项的下标
函数返回值的说明:
    index：  选项的下标
其它说明: 无
*************************************************/
int getKey(string *select1,int len);
/*************************************************
函数名称:info
函数功能、性能等的描述:
    向用户展示界面
输入参数说明：
    select1：选项列表
    len：    选项列表长度
输出参数的说明:
    无
函数返回值的说明:
    getKey(string *select1,int len) 选项的下标
其它说明: 无
*************************************************/
int info(string *select1,int select1_len);
/*************************************************
函数名称:isEixt
函数功能、性能等的描述:
    询问是否退出
输入参数说明：
    无
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void isEixt();
/*************************************************
函数名称:addStaff
函数功能、性能等的描述:
    创建一个方法，来添加Staff对象
输入参数说明：
    vector<Person *> &v：一个vector容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void addStaff(vector<Person *> &v);
/*************************************************
函数名称:addStaffs
函数功能、性能等的描述:
    创建一个方法，来专门调用addStaff来批量创建Staff对象
输入参数说明：
    vector<Person *> &v：一个vector容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void addStaffs(vector<Person *> &v);
/*************************************************
函数名称:addManager
函数功能、性能等的描述:
    创建一个方法，来添加Manager对象
输入参数说明：
    vector<Person *> &v：一个vector容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void addManager(vector<Person *> &v);
/*************************************************
函数名称:addManagers
函数功能、性能等的描述:
    创建一个方法，来专门调用addManagers来批量创建Managers对象
输入参数说明：
    vector<Person *> &v：一个vector容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void addManagers(vector<Person *> &v);
/*************************************************
函数名称:addCEO
函数功能、性能等的描述:
    创建一个方法，来添加CEO对象
输入参数说明：
    vector<Person *> &v：一个vector容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void addCEO(vector<Person *> &v);
/*************************************************
函数名称:addCEOs
函数功能、性能等的描述:
    创建一个方法，来专门调用addCEO来批量创建CEO对象
输入参数说明：
    vector<Person *> &v：一个vector容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void addCEOs(vector<Person *> &v);
/*************************************************
函数名称:createmap
函数功能、性能等的描述:
    创建一个map来存储vector中的所有对象,
    其中key存储person的id,value存储person的指针
输入参数说明：
    vector<Person *> &v：一个vector容器
    map<int, Person *> &m： 一个map容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void createmap(vector<Person *> &v,map<int, Person *> &m);
/*************************************************
函数名称:findById
函数功能、性能等的描述:
    通过map来查找指定id的对象
输入参数说明：
    map<int, Person *> &m： 一个map容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void findById(map<int, Person *> &m);
/*************************************************
函数名称:findByName
函数功能、性能等的描述:
    通过map来查找指定name的对象
输入参数说明：
    map<int, Person *> &m： 一个map容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
bool findByName(map<int, Person *> &m);
/*************************************************
函数名称:deleteById
函数功能、性能等的描述:
    通过map按照职工编号进行删除职工
输入参数说明：
    map<int, Person *> &m： 一个map容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void deleteById(vector<Person *> &v,map<int, Person *> &m);
/*************************************************
函数名称:updateById
函数功能、性能等的描述:
    修改map中的对象信息
输入参数说明：
    vector<Person *> &v,    一个vector容器
    map<int, Person *> &m： 一个map容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void updateById(vector<Person *> &v,map<int, Person *> &m);
/*************************************************
函数名称:isMapEmpty
函数功能、性能等的描述:
    判断map是否为空
输入参数说明：
    map<int, Person *> &m： 一个map容器
输出参数的说明:
    无
函数返回值的说明:
    true：map为空
    flase:map不为空
其它说明: 无
*************************************************/
bool isMapEmpty(map<int, Person *> &m);
/*************************************************
函数名称:showMapAll
函数功能、性能等的描述:
    显示map里面的所有职工信息
输入参数说明：
    map<int, Person *> &m： 一个map容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void showMapAll(map<int, Person *> &m);
/*************************************************
函数名称:showMapReverse
函数功能、性能等的描述:
    逆序map里面的所有职工信息
输入参数说明：
    map<int, Person *> &m： 一个map容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void showMapReverse(map<int, Person *> &m);
/*************************************************
函数名称:isVectorEmpty
函数功能、性能等的描述:
    判断vector是否为空
输入参数说明：
    vector<Person *> &v： 一个vector容器
输出参数的说明:
    无
函数返回值的说明:
    true：map为空
    flase:map不为空
其它说明: 无
*************************************************/
bool isVectorEmpty(vector<Person *> &v);
/*************************************************
函数名称:showVectorAll
函数功能、性能等的描述:
    显示vector里面的所有职工信息
输入参数说明：
    vector<Person *> &v： 一个vector容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void showVectorAll(vector<Person *> &v);
/*************************************************
函数名称:clearMap
函数功能、性能等的描述:
    清空map
输入参数说明：
    map<int, Person *> &m： 一个map容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void clearMap(map<int, Person *> &m);
/*************************************************
函数名称:clearVector
函数功能、性能等的描述:
    清空vector
输入参数说明：
    vector<Person *> &v： 一个vector容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void clearVector(vector<Person *> &v);
/*************************************************
函数名称:SaveVector
函数功能、性能等的描述:
    将Vector里面的所有职工信息写入文件
输入参数说明：
    vector<Person *> &v： 一个vector容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void SaveVector(vector<Person *> &v);
/*************************************************
函数名称:ReadVector
函数功能、性能等的描述:
    将文件里面读入vector容器里面
输入参数说明：
    vector<Person *> &v： 一个vector容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void ReadVector(vector<Person *> &v,map<int, Person *> &m);
/*************************************************
函数名称:exit_system
函数功能、性能等的描述:
    退出子系统
输入参数说明：
    vector<Person *> &v： 一个vector容器
    map<int, Person *> &m：一个map容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void exit_system(vector<Person *> &v,map<int, Person *> &m);
/*************************************************
函数名称:add_system
函数功能、性能等的描述:
    增加子系统
输入参数说明：
    vector<Person *> &v： 一个vector容器
    map<int, Person *> &m：一个map容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void add_system(vector<Person *> &v,map<int, Person *> &m);
/*************************************************
函数名称:show_system
函数功能、性能等的描述:
    显示子系统
输入参数说明：
    vector<Person *> &v： 一个vector容器
    map<int, Person *> &m：一个map容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void show_system(vector<Person *> &v,map<int, Person *> &m);
/*************************************************
函数名称:del_system
函数功能、性能等的描述:
    删除子系统
输入参数说明：
    vector<Person *> &v： 一个vector容器
    map<int, Person *> &m：一个map容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void del_system(vector<Person *> &v,map<int, Person *> &m);
/*************************************************
函数名称:update_system
函数功能、性能等的描述:
    修改子系统
输入参数说明：
    vector<Person *> &v： 一个vector容器
    map<int, Person *> &m：一个map容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void update_system(vector<Person *> &v,map<int, Person *> &m);
/*************************************************
函数名称:find_system
函数功能、性能等的描述:
    查询子系统
输入参数说明：
    vector<Person *> &v： 一个vector容器
    map<int, Person *> &m：一个map容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void find_system(vector<Person *> &v,map<int, Person *> &m);
/*************************************************
函数名称:clear_system
函数功能、性能等的描述:
    清空子系统
输入参数说明：
    vector<Person *> &v： 一个vector容器
    map<int, Person *> &m：一个map容器
输出参数的说明:
    无
函数返回值的说明:
    无
其它说明: 无
*************************************************/
void clear_system(vector<Person *> &v,map<int, Person *> &m);

#endif // MYHEAD_H
